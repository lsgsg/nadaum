const PING = "PING";

// 기본적인 상태 값들을 정의한다.
// 각 모듈마다 필요한 상태들을 변수로 선언하여, 하나의 object로 만들어서 관리한다.

// 여긴 테스트 페이지
const initialState = {
    ping : "핑!"
};

// action type들에 따라서 switch 문으로 걸러준다.

export const ping = (state = initialState, action) => {
    switch (action.type) {
        case PING :
            return {
                ping:"퐁!"
            };
        default :
            return state;
    }
}
// 컴포넌트끼리의 자료를 보다 쉽게 관리하는 것을 redux라고 한다.
// flux는 개념이다. 이 flux를 구현한게 redux 이다.
// mvc 디자인 패턴 .... 길동이와 길순이 ...
// 어떤 액션이 입력되면 컨트롤러가 받아 ~ view는 model을 바고 model에 영향을 준다.
// 마치 길동이의 길순이마냥 .....
// 근데 규모가 커지면 어케 될까? 구조가 많이 복잡해 진다.
// 무한 루프가 있는지 없는지 발견 할 수 없을 지도 모른다.
// 화살표 만으로는 알 수 없다. 코드는 더 어렵다.
// 페이스북의 대표 사례 : 읽지 않은 채티창 개수. 표시...
// 채티앙은 여기저기 저기 여기ㅇ 이싿. 읽었다고 반영을 시켜야 하는데
// 여기서 읽언것을 저기 서 안 읽었다고 나타냄
// 근데 읽었음 ... // 기존 mvc 패턴에선 이 점을 해결할 수 없었다.
// 뷰에서 스토어를 직접 접근 하지 않고 액션을 통해 디스패처로 간다.

// 
